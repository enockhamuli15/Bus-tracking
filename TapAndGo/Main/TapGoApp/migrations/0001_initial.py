# Generated by Django 3.2.7 on 2021-09-20 10:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BusStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.CharField(max_length=5)),
                ('description', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cardnum', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('pending', 'pending'), ('online', 'online'), ('blocked', 'blocked')], default='pending', max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='HealthReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report', models.CharField(choices=[('Unvaccinated', 'Unvaccinated'), ('Positive', 'Positive'), ('Vaccinated', 'Vaccinated')], default='Not reported', max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='NationalId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
                ('famName', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=50)),
                ('dateofbirth', models.DateField()),
                ('phone', models.CharField(max_length=15)),
                ('fathername', models.CharField(max_length=100)),
                ('mothername', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Road',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roadNum', models.CharField(max_length=5)),
                ('description', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PersonnalizedAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typeUser', models.CharField(choices=[('Driver', 'Driver'), ('Agent', 'Agent'), ('Admin', 'Admin'), ('Passenger', 'Passenger')], default='Passenger', max_length=9)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='perso_account', to=settings.AUTH_USER_MODEL)),
                ('cardNum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='card_account', to='TapGoApp.card')),
                ('heath', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_account', to='TapGoApp.healthreport')),
                ('nationalid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='national_account', to='TapGoApp.nationalid')),
            ],
        ),
        migrations.AddField(
            model_name='healthreport',
            name='citizen',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cit_heath', to='TapGoApp.nationalid'),
        ),
        migrations.CreateModel(
            name='Cash',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.FloatField()),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cash_account', to='TapGoApp.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platenum', models.CharField(max_length=20)),
                ('mark', models.CharField(max_length=20)),
                ('sitNum', models.IntegerField()),
                ('affectDriver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_bus', to='TapGoApp.profile')),
                ('affectRoad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bus_road', to='TapGoApp.road')),
            ],
        ),
    ]
